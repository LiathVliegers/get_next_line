
file descriptor return values:
-1 	= NONEXISTANT
0 	= STDIN
1 	= STDOUT
2 	= STDERROR
3 	= this can be the next file, if you create another one it can return 4, and the next one will be 5

if the program returns -1 the file in nonexistent.



read function:

int read(int fileDescriptor, void *buffer, size_t bytesToRead);

It takes in three arguments which are described below:
    1. fileDescriptor: We need to provide the function with an integer file descriptor for the opened file, which the open() function returns when opening a file.
    2. buffer: This pointer points to a buffer where data that is read will be stored.
    3. bytesToRead: Here, we provide an unsigned integer variable that specifies the maximum number of bytes we want to read from the file.




WORKING VERSION OF GET NEXT LINE:
char	*get_next_line(int fd)
{
	char buffer[1024];
	int bytes_read;
	char *next_line;
	int len;
	static int start = 0;
	
	len = 0;
	bytes_read = read(fd, buffer, sizeof(buffer));

	printf("%d bytes read!\n", bytes_read);
	
	while(buffer[start + len] != '\n')
		len++;
	
	next_line = ft_substr(buffer, start, len);
	start = start + len + 1;

	return(next_line);
}

int	main(void)
{
	int fd;

	fd = open("textfile.txt", O_RDONLY);
	printf("The fist line of the file = %s\n", get_next_line(fd));
	printf("The seccond line of the file = %s\n", get_next_line(fd));
	printf("The third line of the file = %s\n", get_next_line(fd));
	printf("The fourth line of the file = %s\n", get_next_line(fd));
	printf("The fifth line of the file = %s\n", get_next_line(fd));
	printf("The sixth line of the file = %s\n", get_next_line(fd));
	printf("The seventh line of the file = %s\n", get_next_line(fd));
	
	return (0);
}

TEXTFILE:
Halloooooooo dit is de eerste regel JOEPIIIEE!!!!!!!!!!!!!
Dit is de tweede regel.
Dit is de derde regel.
Dit is de vierde regel. Hierna komen twee new lines, wat gaan we daarmee doen?


Dit is de vijfde (of eigenlijk zevende) regel.

OUTPUT:
234 bytes read!
The fist line of the file = Halloooooooo dit is de eerste regel JOEPIIIEE!!!!!!!!!!!!!
0 bytes read!
The seccond line of the file = Dit is de tweede regel.
0 bytes read!
The third line of the file = Dit is de derde regel.
0 bytes read!
The fourth line of the file = Dit is de vierde regel. Hierna komen twee new lines, wat gaan we daarmee doen?
0 bytes read!
The fifth line of the file = 
0 bytes read!
The sixth line of the file = 
0 bytes read!
The seventh line of the file = Dit is de vijfde (of eigenlijk zevende) regel.
